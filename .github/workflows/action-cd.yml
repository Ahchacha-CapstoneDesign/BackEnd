name: AWS EC2 Deploy

on:
  push:
    branches:
      - develop

jobs:
  build:
    #ubuntu 버전
    runs-on: ubuntu-22.04
    steps:
      #Checkout 진행
      - uses: actions/checkout@v3
      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

          #워크 플로우에 파일을 생성
      - name: Make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.YML }}" > ./application.yml
        shell: bash

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # Gradle BootJar
      - name: BootJar with Gradle
        run: ./gradlew clean bootJar -Dspring.profiles.active=release

      # Docker Image Build & Push
      - name: Docker Image push
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY}}

      # EC2 depoly
      - name: EC2 depoly
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            #현재 사용중인 container 확인
            sudo docker ps
            #현재 사용중인 container 삭제
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY}}
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY}}
            #불필요한 docker image 및 container 삭제
            docker system prune -f